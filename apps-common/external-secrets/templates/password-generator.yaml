---
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: fake
spec:
  provider:
    fake:
      data:
      - key: "/foo/bar"
        value: "HELLO1"
        version: "v1"
      - key: "/foo/bar"
        value: "HELLO2"
        version: "v2"
      - key: "/foo/baz"
        value: '{"john": "doe"}'
        version: "v1"
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: password-generator
spec:
  length: 24
  digits: 5
  symbols: 5
  symbolCharacters: "!@#$%^&*"
  noUpper: false
  allowRepeat: true
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: example
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: fake
    kind: SecretStore
  target:
    name: secret-to-be-created
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        /foo/bar: "{{ .staticUsername }}"
        /foo/baz: "{{ .generatedPassword }}"
        roles: "{{ .staticRoles }}"
  data:
  - secretKey: foo_bar
    remoteRef:
      key: /foo/bar
      version: v1
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: Password
          name: password-generator
      rewrite:
        - regexp:
            source: "^/foo/baz$"
            target: "generatedPassword"


# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: es-user-fluentbit
# spec:
#   refreshInterval: "0"
#   secretStoreRef:
#     name: secret-generator
#     kind: SecretStore
#   target:
#     name: fluentbit-credentials
#     creationPolicy: Owner
#     template:
#       type: Opaque
#       engineVersion: v2
#       data:
#         username: "{{ .staticUsername }}"
#         password: "{{ .generatedPassword }}"
#         roles: "{{ .staticRoles }}"
#   data:
#     # Fetch static values from the fake provider
#     - secretKey: staticUsername
#       remoteRef:
#         key: "static-username"
#     - secretKey: staticRoles
#       remoteRef:
#         key: "static-roles"
#   dataFrom:
#     # Generate password using the Password generator
#     - sourceRef:
#         generatorRef:
#           apiVersion: generators.external-secrets.io/v1alpha1
#           kind: Password
#           name: password-generator
#       rewrite:
#         - regexp:
#             source: "^password$"
#             target: "generatedPassword"

